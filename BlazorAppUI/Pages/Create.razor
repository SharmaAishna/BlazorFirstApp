@page "/Create"
@using BlazorAppUI.Models;
@attribute [Authorize]
@inject AuthenticationStateProvider authProvider
@inject ICategoryData categoryData
@inject ISuggestionData suggestionData
@inject IUserData userData
@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-4">Make A Suggestion</h1>
<div class="row justify-content-center create-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        <div class="close-button-section">
            <button class="btn btn-close"@onclick="ClosePage"></button>
        </div>
        @if(categories is not null)
        {
           <EditForm Model="suggestion" OnValidSubmit="CreateSuggestion">
               <DataAnnotationsValidator />
                <ValidationSummary />
             <div class="ïnput-section">
                <label class="form-label fw-bold text-uppercase" for="suggestion-text">Suggestion</label>
                <div class="input-description">Focus on the technology to learn about.</div>
                <InputText class="form-control" id="suggestion-text" @bind-Value="suggestion.Suggestion" />
             </div>
                <div class="ïnput-section">
                    <label class="form-label fw-bold text-uppercase" for="category">Category</label>
                    <div class="input-description">Choose one category.</div>
                  <div class="col-lg-8">
                      <InputRadioGroup id="category" @bind-Value="suggestion.CategoryId">
                            @foreach (var cat in categories)
                            {
                                <div class="radio-item-group">
                                    <InputRadio Value="@cat.Id" id="@cat.Id" />
                                    <label for="@cat.Id">@cat.CategoryName - @cat.CategoryDescription</label>
                                </div>
                            }
                      </InputRadioGroup>
                 @* <MyInputRadioGroup id="category" @bind-Value="suggestion.CategoryId">
                        @foreach(var cat in categories)
                        {
                            <div>
                                <InputRadio Value="@cat.Id" id="@cat.Id"/>
                                <label for="@cat.Id">@cat.CategoryName - @cat.CategoryDescription</label>
                            </div>
                        }
                    </MyInputRadioGroup>*@
                  </div>
             </div>
                <div class="ïnput-section">
                    <label class="form-label fw-bold text-uppercase" for="description">Description</label>
                    <div class="input-description">Describe your suggestion.</div>
                   <InputTextArea class="form-control" id="description" @bind-Value="suggestion.Description" />
             </div>
             <div class="center-children">
                   <button class="btn btn-main btn-lg text-uppercase mt-3" type="submit">Suggest</button>
             </div>
           </EditForm>
    
        }
    </div>
</div>

@code {
    private CreateSuggestionModel suggestion = new();
    private List<CategoryModel> categories;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await categoryData.GetAllCategories();
         loggedInUser = await authProvider.GetUserFromAuth(userData);
    }
    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }
    private async Task CreateSuggestion()
    {
        SuggestionModel sug=new();
        sug.Suggestion =suggestion.Suggestion;
        sug.Description = suggestion.Description;
        sug.Author = new BasicUserModel(loggedInUser);
        sug.Category = categories.Where(cat => cat.Id == suggestion.CategoryId).FirstOrDefault();

        if (sug.Category is null)
        {
            suggestion.CategoryId = "";
            return;
        }
        await suggestionData.CreateSuggestion(sug);
        suggestion = new();
        ClosePage();
    }
}
